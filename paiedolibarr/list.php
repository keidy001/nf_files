<?php

$res=0;
if (! $res && file_exists("../main.inc.php")) $res=@include("../main.inc.php");       // For root directory
if (! $res && file_exists("../../main.inc.php")) $res=@include("../../main.inc.php"); // For "custom"

require_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';
require_once DOL_DOCUMENT_ROOT.'/salaries/class/salary.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';
require_once DOL_DOCUMENT_ROOT.'/salaries/class/paymentsalary.class.php';

dol_include_once('/paiedolibarr/class/paiedolibarr.class.php');
dol_include_once('/paiedolibarr/class/paiedolibarr_paies.class.php');

$usercanread           = $user->rights->paiedolibarr->lire;
$usercancreate         = $user->rights->paiedolibarr->creer;
$usercandelete     	   = $user->rights->paiedolibarr->supprimer;
$usercandcreatesalary  = $user->rights->paiedolibarr->creer_salaire;
// $usercandelete     	= $user->admin;

if (empty($conf->paiedolibarr->enabled) || !$usercanread || $user->socid > 0) accessforbidden();

// Load translation files required by the page
$langs->load('paiedolibarr@paiedolibarr');
$langs->load('other');
$langs->load('salaries');

$modname = $langs->trans("paiesemployee");

$action    		= GETPOST('action', 'aZ09'); 		// The action 'add', 'create', 'edit', 'update', 'view', ...
$massaction 	= GETPOST('massaction', 'alpha'); 	// The bulk action (combo box choice into lists)
$show_files 	= GETPOST('show_files', 'int'); 	// Show files area generated by bulk actions ?
$confirm   		= GETPOST('confirm', 'alpha'); 		// Result of a confirmation
$cancel     	= GETPOST('cancel', 'alpha'); 		// We click on a Cancel button
$toselect   	= GETPOST('toselect', 'array'); 	// Array of ids of elements selected into a list
$contextpage 	= GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : 'paiedolibarr_list_paies'; // To manage different context of search
$backtopage 	= GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss 		= GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')
$typetotal 		= GETPOST('typetotal', 'alpha'); // Go back to a dedicated page


############################################################################################################################################
$now = dol_now();
$nowdate = $db->idate($now, 'tzuserrel');
$diroutputmassaction = $conf->paiedolibarr->dir_output.'/temp/massgeneration/'.$user->id;

// Load variable for pagination
$limit 			= GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield 		= GETPOST('sortfield', 'aZ09comma');
$sortorder 		= GETPOST('sortorder', 'aZ09comma');
$page 			= GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page == -1) {
	$page = 0;
}

$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;
if (!$sortorder) {
	$sortorder = "DESC";
}
if (!$sortfield) {
	$sortfield = "o.rowid";
}
############################################################################################################################################

// Initialize technical objects
$paiedolibarr 	= new paiedolibarr($db);
$paies 			= new paiedolibarr_paies($db);
$object 		= new paiedolibarr_paies($db);
$userstatic     = new User($db);
$form 			= new Form($db);
$formother 		= new FormOther($db);

$res = $paiedolibarr->upgradeTheModule();



############################################################################################################################################

$search_ref 		= GETPOST('search_ref');
$search_label 		= GETPOST('search_label');
$search_comment 	= GETPOST('search_comment');
$search_fk_user 	= GETPOST('search_fk_user');
$srch_salairebrut 	= GETPOST('srch_salairebrut');
$srch_salairenet 	= GETPOST('srch_salairenet');
$srch_netapayer 	= GETPOST('srch_netapayer');
$periodyear 		= GETPOST('periodyear','int');
$periodmonth 		= GETPOST('periodmonth','int');

$srch_datepay_start = dol_mktime(0, 0, 0, GETPOST('srch_datepay_startmonth', 'int'), GETPOST('srch_datepay_startday', 'int'), GETPOST('srch_datepay_startyear', 'int'));
$srch_datepay_end 	= dol_mktime(23, 59, 59, GETPOST('srch_datepay_endmonth', 'int'), GETPOST('srch_datepay_endday', 'int'), GETPOST('srch_datepay_endyear', 'int'));


############################################################################################################################################

if ($periodmonth == ''){
	// if(((int) date('m') == 1)) {
	// 	if(!$periodyear) $periodyear = (int) date('Y') - 1;
	// 	$periodmonth = 12;
	// } else {
	// 	$periodmonth = (int) date('m') - 1;
	// }
	$periodmonth = (int) date('m');
}

if (!$periodyear){
	$periodyear = date('Y');
}

$arrayfields = array();

$arrayfields['o.ref']			= array('label'=> 'Ref', 'checked'=>1);
$arrayfields['o.fk_user']		= array('label'=> 'paiedolibarremploye', 'checked'=> 1);
$arrayfields['o.label']			= array('label'=> 'paiesname', 'checked'=>0);
$arrayfields['o.comment']		= array('label'=> 'paieCommentaire', 'checked'=>0);
$arrayfields['o.period']		= array('label'=> 'paieofmonth', 'checked'=> 1);
$arrayfields['o.datepay']		= array('label'=> 'paiesdatepay', 'checked'=> 0);

$arrayfields['o.salairebrut']	= array('label'=> 'paieSalaireBrut', 'checked'=> 1);
$arrayfields['o.salairenet']	= array('label'=> 'paieNet_imposable', 'checked'=> 1);
$arrayfields['o.netapayer']		= array('label'=> 'paieNet_a_payer', 'checked'=> 1);


############################################################################################################################################

if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) {
	$toselect 			= '';
	$srch_datepay_start 	= '';
	$srch_datepay_end 	= '';
	$filter = "";
	$search_ref = "";
	$search_label = "";
	$search_comment = "";
	$srch_salairebrut = "";
	$srch_salairenet = "";
	$srch_netapayer = "";
	$search_fk_user = "";
	$periodyear = date('Y');
	// $periodmonth = date('m') + 0;
	$periodmonth = "";
	$massaction 		= '';
}



############################################################################################################################################
// Last Month
############################################################################################################################################

$totpaieslastmonth = 0;

if($periodmonth > 0) {
	$sql = "SELECT COUNT(o.rowid) as total_paies FROM ".MAIN_DB_PREFIX.$paies->table_element." as o";
	$sql .= " WHERE o.entity IN (0,".(int) $conf->entity.")";

	$srchperiod = $periodyear.'-'.sprintf("%02d", $periodmonth).'-01';
	$lastperiod = date('Y-m-d', strtotime("-1 months", strtotime($srchperiod)));

	$sql .= " AND o.period = '".$lastperiod."'";

	$resql = $db->query($sql);

	if ($resql) {
		$obj = $db->fetch_object($resql);
		$totpaieslastmonth = $obj->total_paies;
	}
}

############################################################################################################################################


$param = '';
if ($limit > 0 && $limit != $conf->liste_limit) $param .= '&limit='.urlencode($limit);
if ($search_ref) $param .= '&search_ref='.urlencode($search_ref);
if ($search_label) $param .= '&search_label='.urlencode($search_label);
if ($search_comment) $param .= '&search_comment='.urlencode($search_comment);
if ($search_fk_user) $param .= '&search_fk_user='.urlencode($search_fk_user);
if ($srch_salairebrut) $param .= '&srch_salairebrut='.urlencode($srch_salairebrut);
if ($srch_salairenet) $param .= '&srch_salairenet='.urlencode($srch_salairenet);
if ($srch_netapayer) $param .= '&srch_netapayer='.urlencode($srch_netapayer);
if ($periodyear) $param .= '&periodyear='.urlencode($periodyear);
if ($periodmonth) $param .= '&periodmonth='.urlencode($periodmonth);
if ($srch_datepay_start != '') $param .= '&srch_datepay_start='.urlencode($srch_datepay_start);
if ($srch_datepay_end != '') $param .= '&srch_datepay_end='.urlencode($srch_datepay_end);
if ($periodmonth != '') $param .= '&periodmonth='.urlencode($periodmonth);




############################################################################################################################################
// -----------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################################################


// $sql = "SELECT o.* ";

$sql = "SELECT o.rowid, o.ref, o.fk_user, o.label, o.comment, o.fk_salary, o.period, o.datepay, o.salairebrut, o.salairenet, o.netapayer ";
$sql .= ' ,u.login, u.lastname, u.firstname, GROUP_CONCAT(COALESCE(u.firstname, ""), " ", COALESCE(u.lastname, "")) as full_name, u.email as user_email, u.statut as user_status, u.entity as user_entity, u.photo, u.office_phone, u.office_fax, u.user_mobile, u.job, u.gender';
$sql .= ' , s.label as slabel, s.datesp, s.dateep, s.paye as spaye';

$sql .= " FROM ".MAIN_DB_PREFIX."paiedolibarr_paies as o";
$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'user as u ON o.fk_user = u.rowid';
$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'salary as s ON o.fk_salary = s.rowid';
$sql .= " WHERE o.entity IN (0,".(int) $conf->entity.")";

if ($search_ref) 			$sql .= natural_search("o.ref", $search_ref);
if ($search_label) 			$sql .= natural_search("o.label", $search_label);
if ($search_comment) 	$sql .= natural_search("o.comment", $search_comment);
if ($search_fk_user > 0)	$sql .= ' AND o.fk_user = '.(int) $search_fk_user;
if ($srch_salairebrut > 0) 	$sql .= " AND o.salairebrut like '%".$srch_salairebrut."%'";
if ($srch_salairenet > 0) 	$sql .= " AND o.salairenet like '%".$srch_salairenet."%'";
if ($srch_netapayer > 0) 	$sql .= " AND o.netapayer like '%".$srch_netapayer."%'";

if ($srch_datepay_start) 	$sql .= " AND CAST(o.datepay as date) >= '".$db->idate($srch_datepay_start)."'";
if ($srch_datepay_end) 		$sql .= " AND CAST(o.datepay as date) <= '".$db->idate($srch_datepay_end)."'";

$srchperiod = $periodyear.'-'.sprintf("%02d", $periodmonth).'-01';

if($periodmonth)
	$sql .= " AND o.period = '".$srchperiod."'";
else
	$sql .= " AND YEAR(o.period) = '".$periodyear."'";

$sql .= ' GROUP BY o.rowid';
$sql .= ', o.ref, o.fk_user, o.label, o.comment, o.fk_salary, o.period, o.datepay, o.salairebrut, o.salairenet, o.netapayer ';
$sql .= ', login, lastname, firstname, user_email, user_status, user_entity, photo, office_phone, office_fax, user_mobile, job, gender';
$sql .= ', s.label, s.paye, s.datesp, s.dateep ';



// echo $sql;

$sql .= $db->order($sortfield, $sortorder);

############################################################################################################################################

// Count total nb of records
$nbtotalofrecords = '';
if (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST) || 1>0) {
	$resql = $db->query($sql);
	$nbtotalofrecords = $db->num_rows($resql);
	if (($page * $limit) > $nbtotalofrecords) {	// if total resultset is smaller then paging size (filtering), goto and load page 0
		$page = 0;
		$offset = 0;
	}
}
############################################################################################################################################
if($action == "dupliclign" && !$nbtotalofrecords && $periodmonth && $totpaieslastmonth > 0) {

	$sql2 .= "SELECT o.* ";
	$sql2 .= ' ,u.lastname, u.firstname';
	$sql2 .= ' ,ue.paiedolibarrsituation_f, ue.paiedolibarrnbrenfants';

	$sql2 .= " FROM ".MAIN_DB_PREFIX."paiedolibarr_paies as o";
	$sql2 .= ' LEFT JOIN '.MAIN_DB_PREFIX.'user as u ON o.fk_user = u.rowid';
	$sql2 .= ' LEFT JOIN '.MAIN_DB_PREFIX.'user_extrafields as ue ON u.rowid = ue.fk_object';

	$sql2 .= " WHERE o.entity IN (0,".(int) $conf->entity.")";

	$srchperiod = $periodyear.'-'.sprintf("%02d", $periodmonth).'-01';
	$lastperiod = date('Y-m-d', strtotime("-1 months", strtotime($srchperiod)));

	$sql2 .= " AND o.period = '".$lastperiod."'";

	// d($sql2);
	$resql2 = $db->query($sql2);

	if ($resql2) {

		$tmptotlastpayrolls = $db->num_rows($resql2);

		$z = 0;
		if($tmptotlastpayrolls > 0) {
			while ($z < $tmptotlastpayrolls) {
				$obj = $db->fetch_object($resql2);

				$originpaie = new paiedolibarr_paies($db);
				$originpaie->fetch($obj->rowid);
				// d($obj,0);
				// d($originpaie,0);
				// die;
				
				$fk_user = $obj->fk_user;

			    // $employee = new User($db);
			    // $employee->fetch($fk_user);

				$results = array();

			    $mountyear = $langs->trans("Month".sprintf("%02d", $periodmonth))." ".$periodyear;

				$name = $obj->firstname.' '.$obj->lastname.' - ';
				if($conf->global->MAIN_FIRSTNAME_NAME_POSITION)
					$name = $obj->lastname.' '.$obj->firstname.' - ';
				
			    $period = $periodyear.'-'.$periodmonth.'-01';
			    $lastday = date('Y-m-t', strtotime($period));

			    $results['fk_user'] = $fk_user;
			    $results['period'] 	= $period;

			    $results['ref'] 	= 'P'.substr( $periodyear, -2).''.sprintf("%02d", $periodmonth).'-'.sprintf("%03d", $fk_user);
				$results['label'] 	= $langs->trans('Fiche_de_salaire').' - '.html_entity_decode($name).html_entity_decode($mountyear);

			    $results['datepay'] 	= $lastday;
			    $results['fk_author'] 	= $user->id;
			    $results['situation_f'] = $obj->paiedolibarrsituation_f ? $obj->paiedolibarrsituation_f : $obj->situation_f;
				$results['nbrenfants'] 	= $obj->paiedolibarrnbrenfants ? $obj->paiedolibarrnbrenfants : $obj->nbrenfants;
			    $results['mode_reglement_id'] = $obj->mode_reglement_id;
				
			    $results['entity'] = $conf->entity;


			    $results['comment']    = $db->escape($originpaie->comment);
			    $results['nbdaywork'] = (int) $originpaie->nbdaywork;
			    // $results['nbdayabsence'] = (int) $originpaie->nbdayabsence;
			    // $results['worksite']  = $db->escape($originpaie->worksite);


			    $newpaie_id = $paies->create(0, $results);
			    $paies->fetch($newpaie_id);


			    if ($newpaie_id > 0) {
			   		// $ret = $extrafields->setOptionalsFromPost(null, $paies);
			   		$paies->array_options = $originpaie->array_options;
			   		$data['rowid'] = $newpaie_id;
			    	$isvalid = $paies->update($newpaie_id, $data);

			        $otherdata = $paies->calculatePaieRules($newpaie_id, 'duplicate');
		       	}
				$z++;
			}

			setEventMessages($langs->transnoentities("RecordCreatedSuccessfully"), null, 'mesgs');
		}

	}
		
	header('Location: list.php?list=1'.$param);
	exit();
}



############################################################################################################################################

if($periodmonth){
	$period = $langs->trans("Month".sprintf("%02d", $periodmonth))." ".$periodyear;
}else{
	$period = $periodyear;
}

$exporter = GETPOST('exporter');
if($exporter){
	$filename = $langs->trans('paiegestiondepaie').' '.$period.".xls";
	if($exporter == 'pdf') {
		$filename=$langs->trans('paiegestiondepaie').' '.$period.".pdf";

	    require_once DOL_DOCUMENT_ROOT.'/core/lib/pdf.lib.php';
	    require_once dol_buildpath('/paiedolibarr/pdf/pdf.lib.php');

	    $pdf->SetMargins(7, 2, 7, false);
	    $pdf->SetFooterMargin(10);
	    $pdf->setPrintFooter(true);
	    $pdf->SetAutoPageBreak(TRUE,10);

	    $pdf->SetFont('dejavusans', '', 9, '', true);
        $pdf->AddPage('L');
        // $pdf->AddPage('P');

        $formatarray = pdf_getFormat();

        $marge_haute =isset($conf->global->MAIN_PDF_MARGIN_TOP)?$conf->global->MAIN_PDF_MARGIN_TOP:10;
        $marge_basse =isset($conf->global->MAIN_PDF_MARGIN_BOTTOM)?$conf->global->MAIN_PDF_MARGIN_BOTTOM:10;
        $margin = $marge_haute+$marge_basse+45;

        $page_largeur = $formatarray['width'];
        $page_hauteur = $formatarray['height'];
        $format = array($page_largeur,$page_hauteur);

        $marge_gauche=isset($conf->global->MAIN_PDF_MARGIN_LEFT)?$conf->global->MAIN_PDF_MARGIN_LEFT:8;
        $marge_droite=isset($conf->global->MAIN_PDF_MARGIN_RIGHT)?$conf->global->MAIN_PDF_MARGIN_RIGHT:8;
        $marge_haute =isset($conf->global->MAIN_PDF_MARGIN_TOP)?$conf->global->MAIN_PDF_MARGIN_TOP:7;
        $marge_basse =isset($conf->global->MAIN_PDF_MARGIN_BOTTOM)?$conf->global->MAIN_PDF_MARGIN_BOTTOM:5;
        $emetteur = $mysoc;

        $default_font_size = pdf_getPDFFontSize($langs);

        $pdf->SetTextColor(0,0,0);
        $pdf->SetFont('dejavusans','', $default_font_size + 2);

        $posx=$marge_gauche;
        $posy=$marge_haute;

        $height = 15;
        // Logo
        $logo=$conf->mycompany->dir_output.'/logos/'.$emetteur->logo;

        if ($emetteur->logo)
        {
            if (is_readable($logo))
            {
                // $height=pdf_getHeightForLogo($logo);
                $pdf->Image($logo, $marge_gauche, $posy, 0, $height); // width=0 (auto)
            }
            else
            {
                $pdf->SetTextColor(200,0,0);
                $pdf->SetFont('dejavusans','B', $default_font_size -2);
                $pdf->MultiCell(100, 3, $langs->transnoentities("ErrorLogoFileNotFound",$logo), 0, 'L');
                $pdf->MultiCell(100, 3, $langs->transnoentities("ErrorGoToGlobalSetup"), 0, 'L');
            }
        }
        else
        {
            $text=$emetteur->name;
            $pdf->MultiCell(40, 2, $langs->convToOutputCharset($text), 0, 'L');
        }

        $posy += $height+5;

        $pdf->SetXY($posx,$posy);

	}

    require_once dol_buildpath('/paiedolibarr/tpl/gestion_paie.php');


	if($exporter == 'pdf') {
		$pdf->writeHTML($output, true, false, true, false, '');
	    ob_start();
	    $pdf->Output($filename, 'I');
	    // ob_end_clean();
	    die();
	}
}

############################################################################################################################################

/*
 * Actions
 */
if (GETPOST('cancel', 'alpha')) {
	$action = 'list'; $massaction = '';
}

// Delete object en masse
if ($massaction == 'predeleteobject' && $usercandelete) {
	$error = 0;
	$ttr = 0;
	$ids = '';
	$nberror = 0;
	$nbchanged = 0;
	$db->begin();

	foreach ($toselect as $objid) {
		$objpaie = new paiedolibarr_paies($db);
		$objpaie->fetch($objid);
	    if($objpaie->fk_salary){
            $sql = "SELECT COUNT(rowid) as nb FROM ".MAIN_DB_PREFIX."accounting_bookkeeping WHERE doc_type = 'bank' AND fk_doc IN ( SELECT fk_bank FROM ".MAIN_DB_PREFIX."payment_salary as ps WHERE ps.fk_salary=".$objpaie->fk_salary.")";
            $resql = $db->query($sql);
            if ($resql) {
                $obj = $db->fetch_object($resql);
                if ($obj && $obj->nb > 0) {
                	$nberror++;
                    $msg_error = 'Error_RecordAlreadyInAccountingDeletionNotPossible';
                } else {
                	// Salary already created can't be deleted
                }
                // else{
				// 	$ids = ($ids != '') ? $ids.','.$objid : $objid;
				// 	$nbchanged++;
                // }
            } 
        }else{
			$ids = ($ids != '') ? $ids.','.$objid : $objid;
			$nbchanged++;
        }

		// if($ttr >= 200) {
	    //     $result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paies WHERE rowid IN (".$ids.") ");
	    //     // $result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paiesrules WHERE fk_paie IN (".$ids.") ");
	    //     $ids = '';
	    //     $ttr = 0;
		// }
		$ttr++;
	}

	if($ids != '') {
		$result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paies WHERE rowid IN (".$ids.") ");
		if($result > 0) 
        	$result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paiesrules WHERE fk_paie IN (".$ids.") ");
	}

	if($nberror>0){
		setEventMessages($langs->trans($msg_error, $nberror), null, 'errors');
	}

	if (!$error) {
		if($nbchanged > 0)
		setEventMessages($langs->trans("RecordsDeleted", $nbchanged), null, 'mesgs');
		$db->commit();
	} else {
		$db->rollback();
	}
	header('Location: list.php?list=1'.$param);
	exit();
}


// Delete object en masse
if ($action == 'confirm_createsalary' && ($usercandcreatesalary>0 || $user->admin) && GETPOST('confirm') == 'yes') {
	$error = 0;
	$ttr = 0;
	$ids = '';
	$nbchanged = 0;
	$db->begin();

	$modpayment = GETPOST("modpayment");
    $accountid = GETPOST("accountid", 'int');
    $toselect = GETPOST('str_toselect') ? explode(',', GETPOST('str_toselect', 'alpha')) : [];

	foreach ($toselect as $objid) {
		$ids = ($ids != '') ? $ids.','.$objid : $objid;

		$objpaie = new paiedolibarr_paies($db);
		$objpaie->fetch($objid);

		if(empty($objpaie->fk_salary) || $objpaie->fk_salary<=0){
    		$salary = new Salary($db);

		    $salary->accountid = $accountid > 0 ? $accountid : 0;
		    $salary->fk_user = $objpaie->fk_user;
		    $salary->datev = dol_now();
		    $salary->datep = dol_now();
		    $salary->amount = $objpaie->netapayer;
		    $salary->label = $langs->trans("Salary");
		    $salary->datesp = $db->jdate($objpaie->period);
		    $salary->dateep = $objpaie->datepay;
		    $salary->type_payment = (!empty($modpayment) ? $modpayment : 0);
		    $salary->fk_user_author = $user->id;
		    $salary->array_options['options_paiedolibarr_fk_paie'] = $objpaie->id;
		    $res = $salary->create($user);
		    
		    if($res>0){
		        $paiement = new PaymentSalary($db);
		        $paiement->chid         = $salary->id;
		        $paiement->datepaye     = $salary->datep;
		        $paiement->datev        = $salary->datev;
		        $paiement->amounts      = array($salary->id => $objpaie->netapayer); // Tableau de montant
		        $paiement->paiementtype = (!empty($modpayment) ? $modpayment : 0);

		        $paymentid = $paiement->create($user, (int) GETPOST('closepaidsalary'));
		        if ($paymentid > 0) {
		            $result = $paiement->addPaymentToBank($user, 'payment_salary', '(SalaryPayment)', $accountid, '', '');
		            if (!($result > 0)) {
		                setEventMessages($paiement->error, null, 'errors');
		            }
		        }

		        $objpaie->update($objpaie->id, ['fk_salary' => $res]);
				$nbchanged++;

		    }else{
		    	$error++;
		        setEventMessages($salary->error, $salary->errors, 'errors');
		    }
		}
	}


	if (!$error) {
		setEventMessages($langs->trans("SalarySaved", $nbchanged), null, 'mesgs');
		$db->commit();
	} else {
		$db->rollback();
	}
	header('Location: list.php?list=1'.$param);
	exit();
}
// Selection of new fields
include DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';






############################################################################################################################################

$arrayofjs = array('includes/jquery/plugins/blockUI/jquery.blockUI.js', 'core/js/blockUI.js');
$moreheadjs = '';
$moreheadjs .= '<script type="text/javascript">'."\n";
$moreheadjs .= 'var indicatorBlockUI = \''.DOL_URL_ROOT."/theme/".$conf->theme."/img/working.gif".'\';'."\n";

$moreheadjs .= '$( document ).ready(function() {
	$("#action_dupliclign").click( function() {
		$.pleaseBePatient("'.$langs->trans('PleaseBePatient').'");
	});
});';
$moreheadjs .= '</script>'."\n";

$title = '';

$title .= dol_htmlentitiesbr_decode($modname);

if($periodmonth) {
	$title .= ' - '.$langs->trans("Month".sprintf("%02d", $periodmonth))." ".$periodyear;
}
else {
	$title .= ' - '.$periodyear;
}

// require_once dol_buildpath('/paiedolibarr/export/list.php');

$sql .= $db->plimit($limit + 1, $offset);


/*
 * View
 */
llxHeader($moreheadjs, $title, $help_url = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs);


$totsalairebrut = 0;
$totsalairenet = 0;
$totnetapayer = 0;

$currency = $conf->currency;



$resql = $db->query($sql);
if ($resql) {
	$num = $db->num_rows($resql);

	$arrayofselected = is_array($toselect) ? $toselect : array();

	
	// List of mass actions available
	$arrayofmassactions = array();

	if (!empty($usercandelete)) 
		$arrayofmassactions['predeleteobject'] 	= img_picto('', 'delete', 'class="pictofixedwidth"').' '.$langs->trans("Delete");
	if (!empty($conf->global->PAIEDOLIBARR_ENABLE_ADDSALARY) && ($user->admin || $usercandcreatesalary>0) && $num>0) 
		$arrayofmassactions['createsalary'] 	= img_picto('', 'salary', 'class="pictofixedwidth"').' '.$langs->trans("createsalary");

	// if (!empty($usercanaction_all)) {
	// 	$arrayofmassactions['preacceptobj'] 	= img_picto('', 'check', 'class="pictofixedwidth"').' '.$langs->trans("STATUS_GRANTED");
	// 	$arrayofmassactions['prerefuseobj'] 	= img_picto('', 'close_title', 'class="pictofixedwidth"').' '.$langs->trans("STATUS_NOT_GRANTED");
	// 	$arrayofmassactions['prereduceobj'] 	= img_picto('', 'angle-double-down', 'class="pictofixedwidth"').' '.$langs->trans("HRMdeduitSalaire").' : '.$langs->trans("Yes");
	// 	$arrayofmassactions['prenotreduceobj'] 	= img_picto('', 'check', 'class="pictofixedwidth"').' '.$langs->trans("HRMdeduitSalaire").' : '.$langs->trans("No");
	// }
	$massactionbutton = $form->selectMassAction('', $arrayofmassactions);


	if($massaction == "createsalary" && ($usercandcreatesalary>0 || $user->admin)){

	    $formquestion = array();
	    
	    $label = $langs->trans('BankAccount');
	    $accountid = $conf->global->PAIEDOLIBARR_BANK_ACCOUNT_ID;
	    $list = $form->select_comptes($accountid, 'accountid', 0, '', 2, '', 0, 'minwidth300 maxwidth300', 1);
	    $formquestion[] = array('type' => 'other', 'name' => 'accountid', 'label' => $label, 'value' => $list);

	    $label = $langs->trans('PaymentMode');
	    // $modpayment = $conf->global->PAIEDOLIBARR_MODEPAYMENT;
	    $modpayment = 0;
	    $list = $form->select_types_paiements($modpayment, 'modpayment', '', 0, 0, 0, 0, 1, 'minwidth300 maxwidth300', 1);
	    $formquestion[] = array('type' => 'other', 'name' => 'modpayment', 'label' => $label, 'value' => $list);

	    $toselect = GETPOST('toselect', 'array');
		$toselect = $toselect ? implode(',', $toselect) : '';

	    print $form->formconfirm("list.php?page=".$page.'&massaction=createsalary&str_toselect='.urldecode($toselect).'&periodyear='.urlencode($periodyear).'&periodmonth='.urlencode($periodmonth), $langs->trans('Confirmation'), $langs->trans('Confirm_CreatedAllSalary', $period), 'confirm_createsalary', $formquestion,  "yes", 0, 250, 580);
	}


	// Lines of title fields
	print '<form class="paiedolibarr" action="'.$_SERVER["PHP_SELF"].'" method="POST">'."\n";
	if ($optioncss != '') {
		print '<input type="hidden" name="optioncss" value="'.$optioncss.'">';
	}
	print '<input type="hidden" name="token" value="'.newToken().'">';
	print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
	print '<input type="hidden" name="action" value="'.($action == 'edit' ? 'update' : 'list').'">';
	print '<input type="hidden" name="contextpage" value="'.$contextpage.'">';
	print '<input type="hidden" name="sortfield" value="'.$sortfield.'">';
	print '<input type="hidden" name="sortorder" value="'.$sortorder.'">';
	print '<input type="hidden" name="module" value="'.$module.'">';
	

	$pa = ($periodmonth > 0) ? '&month='.$periodmonth : '';
	$pa .= ($periodyear > 0) ? '&year='.$periodyear : '';

	$newcardbutton = '';

	$newcardbutton .= '<span class="paiesearchbutton">';
	$newcardbutton .= '<a href="./list.php?exporter=pdf&periodyear='.$periodyear.'&periodmonth='.$periodmonth.'" target="_blank" class="butAction">'.$langs->trans('PDF').'</a>';
	$newcardbutton .= '<a href="./list.php?exporter=xls&periodyear='.$periodyear.'&periodmonth='.$periodmonth.'" class="butAction">'.$langs->trans('Excel').'</a>';
	// $searchpicto = $form->showFilterButtons();
	// $newcardbutton .= $searchpicto;
	$newcardbutton .= '</span>';

	if($module)
		$newcardbutton .= dolGetButtonTitle($langs->trans('New'), '', 'fa fa-plus-circle', './card.php?action=create'.$pa, '', $usercancreate);
		// $newcardbutton .= dolGetButtonTitle($langs->trans('New'), '', 'fa fa-plus-circle', './card.php?'.$firstparam.'&action=create'.$pa, '', $usercancreate);


	// if($conf->global->PAIEDOLIBARR_ENABLE_ADDSALARY && !$object->fk_salary && ($user->admin || $usercandcreatesalary>0) && $num>0){
    //     // $btnright =  ' <a href="./list.php?action=createsalary&page='.$page.'" id="createsalary" class="butAction badge-status1 hidden">'.$langs->trans('createsalary').'</a>';
    // }

	print_barre_liste($title, $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, $paies->picto, 0, $newcardbutton, '', $limit, 0, 0, 1, $btnright = '');

	$varpage = empty($contextpage) ? $_SERVER["PHP_SELF"] : $contextpage;
	$selectedfields = $form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage); // This also change content of $arrayfields
	$selectedfields .= (count($arrayofmassactions) ? $form->showCheckAddButtons('checkforselect', 1) : '');


	print '<div id="paiedolibarrpage">';
	print '<input type="hidden" name="token" value="'.newToken().'">';
	print '<input type="hidden" name="action" value="selectperiod">';
	// print '<input type="hidden" name="id" value="'.$proejectid.'">';
	// print '<input name="filter" type="hidden" value="'.$filter.'">';

	print '<table width="100%">';

	print '<tr >';
	print '<td class="left width200 nowrap">';
	if(!$num && $totpaieslastmonth > 0){
		print '<a class="butAction nomarginleft" id="action_dupliclign" href="'.dol_buildpath("/paiedolibarr/list.php?list=1".$param."&action=dupliclign",1).'" title="'.dol_escape_htmltag($langs->trans("dupliclignesPaies")).'">'.$langs->trans("dupliclignesPaies").'</a>';
	}
	print '</td>';
	print '<td class="center" align="center">';
	print $formother->selectyear($periodyear,'periodyear',0, 20, 0, 0, 0, 'onchange="this.form.submit()"');
	print $formother->select_month($periodmonth,'periodmonth',1,1,'maxwidth100imp');
	print '</td>';

	print "</table>";
	print '</div>';
	print '<br>';


	$moreforfilter = '';
	print '<div class="div-table-responsive">';
	print '<table class="paiedolibarr_paiedolibarrlist  tagtable liste'.($moreforfilter ? " listwithfilterbefore" : "").'">'."\n";


	// Filters
	print '<tr class="liste_titre_filter">';

	// Ref
	if (!empty($arrayfields['o.ref']['checked'])) {
		print '<td class="liste_titre left width100">';
		print '<input class="flat maxwidth100" type="text" name="search_ref" value="'.dol_escape_htmltag($search_ref).'"></td>';
	}

	// User
    if (!empty($arrayfields['o.fk_user']['checked'])) {
        print '<td class="liste_titre left width150" align="left">';
        // print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, (!$user->admin) ? [$user->id] : '');
        // print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, '');
        print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $show_every = 0, $enableonlytext = '', $morecss = 'width150');
        print '</td>';
    }
	
	// Label
	if (!empty($arrayfields['o.label']['checked'])) {
		print '<td class="liste_titre left width200">';
		print '<input class="flat maxwidth100" type="text" name="search_label" value="'.dol_escape_htmltag($search_label).'"></td>';
	}

	// comment
	if (!empty($arrayfields['o.comment']['checked'])) {
		print '<td class="liste_titre left">';
		print '<input class="flat maxwidth100" type="text" name="search_comment" value="'.dol_escape_htmltag($search_comment).'"></td>';
	}

	// Period
	if (!empty($arrayfields['o.period']['checked'])) {
		print '<td class="liste_titre maxwidthonsmartphone left width150 maxwidth150">';
		print '</td>';
	}
	
	// Date Payment
	if (!empty($arrayfields['o.datepay']['checked'])) {
		print '<td class="liste_titre center width50">';
		print '<div class="nowrap">';
			print $form->selectDate($srch_datepay_start, 'srch_datepay_start', 0, 0, 1, "search_form", 1, 0, 0, '', '', '', '', 1, '', $langs->trans('From'));
		print '</div>';
		
		print '<div class="nowrap">';
			print $form->selectDate($srch_datepay_end, 'srch_datepay_end', 0, 0, 1, "search_form", 1, 0, 0, '', '', '', '', 1, '', $langs->trans('to'));
		print '</div>';
		print '</td>';
	}
	
	// Brut
	if (!empty($arrayfields['o.salairebrut']['checked'])) {
		print '<td class="liste_titre right width100">';
		print '<input class="width100" step="0.01" type="number" class="" id="srch_salairebrut" name="srch_salairebrut" value="'.$srch_salairebrut.'"/>';
		print '</td>';
	}
	
	// Net Impo
	if (!empty($arrayfields['o.salairenet']['checked'])) {
		print '<td class="liste_titre right width100">';
		print '<input class="width100" step="0.01" type="number" class="" id="srch_salairenet" name="srch_salairenet" value="'.$srch_salairenet.'"/>';
		print '</td>';
	}
	
	// Net à payer
	if (!empty($arrayfields['o.netapayer']['checked'])) {
		print '<td class="liste_titre right width100">';
		print '<input class="width100" step="0.01" type="number" class="" id="srch_netapayer" name="srch_netapayer" value="'.$srch_netapayer.'"/>';
		print '</td>';
	}

	// Action column
	print '<td class="liste_titre maxwidthsearch center">';
		$searchpicto = $form->showFilterButtons();
		print $searchpicto;
	print '</td>';

	print "</tr>\n";

	print '<tr class="liste_titre">';

	$totalarray = array();
	$totalarray['nbfield'] = 0;
	$totalduration = 0;

	if (!empty($arrayfields['o.ref']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.ref']['label'], $_SERVER["PHP_SELF"], "o.ref", "", $param, 'align="left"', $sortfield, $sortorder, 'left ');
	}
	if (!empty($arrayfields['o.fk_user']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.fk_user']['label'], $_SERVER["PHP_SELF"], "o.fk_user", "", $param, 'align="left"', $sortfield, $sortorder, 'left ');
	}
	if (!empty($arrayfields['o.label']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.label']['label'], $_SERVER["PHP_SELF"], "o.label", "", $param, 'align="left"', $sortfield, $sortorder, 'left width150 minwidth150 ');
	}
	if (!empty($arrayfields['o.comment']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.comment']['label'], $_SERVER["PHP_SELF"], "o.comment", "", $param, 'align="left"', $sortfield, $sortorder, 'left ');
	}
	if (!empty($arrayfields['o.period']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.period']['label'], $_SERVER["PHP_SELF"], "o.period", "", $param, 'align="left"', $sortfield, $sortorder, 'left ');
	}
	if (!empty($arrayfields['o.datepay']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.datepay']['label'], $_SERVER["PHP_SELF"], "o.datepay", "", $param, '', $sortfield, $sortorder, ' width50 maxwidth150 center ');
	}
	if (!empty($arrayfields['o.salairebrut']['checked'])) {
		print_liste_field_titre($arrayfields['o.salairebrut']['label'], $_SERVER["PHP_SELF"], "o.salairebrut", "", $param, '', $sortfield, $sortorder, ' right ');
		$totalarray['nbfield']++;
		$totalarray['pos'][$totalarray['nbfield']] = 'salairebrut';
	}
	if (!empty($arrayfields['o.salairenet']['checked'])) {
		print_liste_field_titre($arrayfields['o.salairenet']['label'], $_SERVER["PHP_SELF"], "o.salairenet", "", $param, '', $sortfield, $sortorder, ' right ');
		$totalarray['nbfield']++;
		$totalarray['pos'][$totalarray['nbfield']] = 'salairenet';
	}
	if (!empty($arrayfields['o.netapayer']['checked'])) {
		print_liste_field_titre($arrayfields['o.netapayer']['label'], $_SERVER["PHP_SELF"], "o.netapayer", "", $param, '', $sortfield, $sortorder, ' right ');
		$totalarray['nbfield']++;
		$totalarray['pos'][$totalarray['nbfield']] = 'netapayer';
	}
	// Action
	print_liste_field_titre($selectedfields, $_SERVER["PHP_SELF"], "", '', '', '', $sortfield, $sortorder, 'maxwidthsearch center ');
	$totalarray['nbfield']++;

	print "</tr>\n";

	$i = 0;
	

	$totalarray['val']['salairebrut'] = 0;  
	$totalarray['val']['salairenet'] = 0;
	$totalarray['val']['netapayer']	= 0;

	$totsalairebrut = 0;
	$totsalairenet = 0;
	$totnetapayer = 0;

    $salstatic = new Salary($db);
    
	while ($i < min($num, $limit)) {
		$obj = $db->fetch_object($resql);

		$error = 0;
		$res = 0;
		
		$paiedolibarr->id 	= $obj->rowid;
		$paiedolibarr->ref 	= $obj->ref;

		$morecss = (!$module && isset($r_arr[$obj->rowid])) ? $r_arr[$obj->rowid] : '';

		print '<tr class="oddeven '.$morecss.'">';

		// $firstparam = $module ? $firstparam : 'module='.$obj->module.'&id='.$obj->fk_module;
		// Réf.
		if (!empty($arrayfields['o.ref']['checked'])) {
			print '<td class="nowrap">';
				print '<a href="./card.php?id='.$obj->rowid.'">';
				print img_picto($langs->trans("Show"), $paies->picto, 'class="valignmiddle paddingrightonly"');
				print $obj->ref;
				if($morecss) {
					print '<span class="fa fa-flag valignmiddle marginleftonly flag '.$morecss.'"></span>';
				}
				print '</a>';
				print '<a class="marginleftonly" href="./card.php?id='.$obj->rowid.'&export=pdf" target="_blank" >'.img_mime('test.pdf',$langs->trans('paiePrintFile')).'</a>';

				if($obj->fk_salary>0){
					
					$salstatic->id = $obj->fk_salary;
					$salstatic->ref = $obj->fk_salary;
					$salstatic->label = $obj->slabel;
					$salstatic->paye = $obj->spaye;
					$salstatic->datesp = $db->jdate($obj->datesp);
					$salstatic->dateep = $db->jdate($obj->dateep);
                    
                    print ' - '.$salstatic->getNomUrl(1);
                }

			print '</td>';
		}

		// User
        if (!empty($arrayfields['o.fk_user']['checked'])) {
            $userstatic->id             = $obj->fk_user;
            $userstatic->login          = $obj->login;
            $userstatic->lastname       = $obj->lastname;
            $userstatic->firstname      = $obj->firstname;
            $userstatic->email          = $obj->user_email;
            $userstatic->status         = $obj->user_status;
            $userstatic->entity         = $obj->user_entity;
            $userstatic->photo          = $obj->photo;
            $userstatic->office_phone   = $obj->office_phone;
            $userstatic->office_fax     = $obj->office_fax;
            $userstatic->user_mobile    = $obj->user_mobile;
            $userstatic->job            = $obj->job;
            $userstatic->gender         = $obj->gender;
            
            print '<td align="left" class="left tdoverflowmax200">';
            if ($userstatic->id) {
            	$cls = ($userstatic->id == $user->id) ? 'current_connected_user' : '';
            	$n = '<span class="userconnected '.$cls.'">';
				$n .= $userstatic->getNomUrl(1);
				$n .= '</span>';

				echo $n;
            }
            print "</td>\n";
        }

		// Label.
		if (!empty($arrayfields['o.label']['checked'])) {
			print '<td class="">';
				print $obj->label;
			print '</td>';
		}

		// comment.
		if (!empty($arrayfields['o.comment']['checked'])) {
			print '<td class="">';
				print dol_trunc($obj->comment, 80);
			print '</td>';
		}

        // Period
		if (!empty($arrayfields['o.period']['checked'])) {
			print '<td class="">';
				$periods = explode('-', $obj->period);
		        $periodyear = $periods[0] + 0;
		        $periodmonth = $periods[1];
		        $period = $langs->trans("Month".sprintf("%02d", $periodmonth))." ".$periodyear;
		        print $period;
			print '</td>';
		}

        // Date Payment
		if (!empty($arrayfields['o.datepay']['checked'])) {
			print '<td class="nowrap center ">'.dol_print_date($db->jdate($obj->datepay), 'day')."</td>";
		}
		
		// Brut
		if (!empty($arrayfields['o.salairebrut']['checked'])) {
			print '<td class="nowrap right">';
				print $paiedolibarr->number_format($obj->salairebrut, 2, '.',' ');
	    		$totalarray['val']['salairebrut'] += $obj->salairebrut;
			print '</td>';
		}
		
		// Net Impo
		if (!empty($arrayfields['o.salairenet']['checked'])) {
			print '<td class="nowrap right">';
				print $paiedolibarr->number_format($obj->salairenet, 2, '.',' ');
				$totalarray['val']['salairenet'] += $obj->salairenet;
			print '</td>';
		}
		
		// Net à payer
		if (!empty($arrayfields['o.netapayer']['checked'])) {
			print '<td class="nowrap right">';
				print $paiedolibarr->number_format($obj->netapayer, 2, '.',' ');
				$totalarray['val']['netapayer']	+= $obj->netapayer;
			print '</td>';
		}

		// Action column
		print '<td class="nowrap center">';
		
			if($user->admin || $user->id == $obj->fk_user) {
				print '<a href="./card.php?id='.$obj->rowid.'&action=edit">';
				print img_picto($langs->trans("Edit"), 'edit', 'class="valignmiddle marginleftonly paddingrightonly"');
				print '</a>';
			}
			
			if ($massactionbutton || $massaction || $massaction == 'createsalary') {
				$selected = (in_array($obj->ref, $arrayofselected) || ($massaction == 'createsalary' && (empty($obj->fk_salary) || $obj->fk_salary<=0))) ? 1 : 0;
				print '<input id="cb'.$obj->ref.'" class="flat checkforselect" type="checkbox" name="toselect[]" value="'.$obj->rowid.'"'.($selected ? ' checked="checked"' : '').'>';
			}
		print '</td>';

		print '</tr>'."\n";

		$i++;
	}

	// // Add a line for total if there is a total to show
	// if (!empty($arrayfields['duration']['checked'])) {
	// 	print '<tr class="total">';
	// 	foreach ($arrayfields as $key => $val) {
	// 		if (!empty($val['checked'])) {
	// 			if ($key == 'duration') {
	// 				print '<td class="right">'.$totalduration.' '.$langs->trans('DurationDays').'</td>';
	// 			} else {
	// 				print '<td></td>';
	// 			}
	// 		}
	// 	}
	// 	print '</tr>';
	// }

	// Si il n'y a pas d'enregistrement suite à une recherche
	if ($num == 0) {
		$colspan = 1;
		foreach ($arrayfields as $key => $val) {
			if (!empty($val['checked'])) {
				$colspan++;
			}
		}
		print '<tr><td colspan="'.$colspan.'" class="opacitymedium">'.$langs->trans("NoRecordFound").'</td></tr>';
	} else {

		print '<tr class="liste_total">';
		$i = 0;
		while ($i < $totalarray['nbfield']) {
			$i++;
			if (!empty($totalarray['pos'][$i])) {
				$tmptotal = !empty($totalarray['val'][$totalarray['pos'][$i]])?$totalarray['val'][$totalarray['pos'][$i]]:0;
				print '<td class="right">'.$paiedolibarr->number_format($tmptotal, 2, '.',' ').'</td>';
			} else {
				if ($i == 1) {
					if (is_null($limit) || ($num < $limit && $page == 0)) {
						print '<td>'.$langs->trans("Total").'</td>';
					} else {
						print '<td>';
						if (is_object($form)) {
							print $form->textwithpicto($langs->trans("Total"), $langs->transnoentitiesnoconv("Totalforthispage"));
						} else {
							print $langs->trans("Totalforthispage");
						}
						print '</td>';
					}
				} else {
					print '<td></td>';
				}
			}
		}
		print '</tr>';

	}

	print '</table>';
	print '</div>';

	print '</form>';
} else {
	dol_print_error($db);
}

?>
<script>
	$( function() {
	$('#paiedolibarrpage select#periodmonth').on('change', function(){
	    $(this).closest('form').submit();
	});
	} );
</script>
<?php

// End of page
llxFooter();
$db->close();