<?php

$res=0;
if (! $res && file_exists("../main.inc.php")) $res=@include("../main.inc.php");       // For root directory
if (! $res && file_exists("../../main.inc.php")) $res=@include("../../main.inc.php"); // For "custom"

// ini_set('display_startup_errors', 1);
// ini_set('display_errors', 1);
// error_reporting(-1);

require_once DOL_DOCUMENT_ROOT.'/core/lib/admin.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/files.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/html.form.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/class/html.formother.class.php';

dol_include_once('/paiedolibarr/class/paiedolibarr.class.php');
dol_include_once('/paiedolibarr/class/paiedolibarr_paies.class.php');

$usercanread        = $user->rights->paiedolibarr->lire;
$usercancreate      = $user->rights->paiedolibarr->creer;
$usercandelete     	= $user->rights->paiedolibarr->supprimer;
// $usercandelete     	= $user->admin;

// if (empty($conf->paiedolibarr->enabled) || !$usercanread || $user->socid > 0) accessforbidden();

// Load translation files required by the page
$langs->load('paiedolibarr@paiedolibarr');
$langs->load('users');
$langs->load('hrm');

$modname = $langs->trans("PayrollJournal");

$action    		= GETPOST('action', 'aZ09'); 		// The action 'add', 'create', 'edit', 'update', 'view', ...
$massaction 	= GETPOST('massaction', 'alpha'); 	// The bulk action (combo box choice into lists)
$show_files 	= GETPOST('show_files', 'int'); 	// Show files area generated by bulk actions ?
$confirm   		= GETPOST('confirm', 'alpha'); 		// Result of a confirmation
$cancel     	= GETPOST('cancel', 'alpha'); 		// We click on a Cancel button
$toselect   	= GETPOST('toselect', 'array'); 	// Array of ids of elements selected into a list
$contextpage 	= GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : 'paiedolibarr_etat_paie'; // To manage different context of search
$backtopage 	= GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss 		= GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')
$typetotal 		= GETPOST('typetotal', 'alpha'); // Go back to a dedicated page


############################################################################################################################################
$now = dol_now();
$nowdate = $db->idate($now, 'tzuserrel');
$diroutputmassaction = $conf->paiedolibarr->dir_output.'/temp/massgeneration/'.$user->id;

// Load variable for pagination
$limit 			= GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield 		= GETPOST('sortfield', 'aZ09comma');
$sortorder 		= GETPOST('sortorder', 'aZ09comma');
$page 			= GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page == -1) {
	$page = 0;
}

$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;
if (!$sortorder) {
	$sortorder = "DESC";
}
if (!$sortfield) {
	$sortfield = "o.period";
}
############################################################################################################################################

// Initialize technical objects
$paiedolibarr 	= new paiedolibarr($db);
$paies 			= new paiedolibarr_paies($db);
$object 		= new paiedolibarr_paies($db);
$userstatic     = new User($db);
$form 			= new Form($db);
$formother 		= new FormOther($db);

$res = $paiedolibarr->upgradeTheModule();



############################################################################################################################################

$search_ref 		= GETPOST('search_ref');
$search_label 		= GETPOST('search_label');
$search_fk_user 		= GETPOST('search_fk_user');
$srch_salairebrut 	= GETPOST('srch_salairebrut');
$srch_salairenet 	= GETPOST('srch_salairenet');
$srch_netapayer 	= GETPOST('srch_netapayer');
$periodyear 		= GETPOST('periodyear','int');
$periodmonth 		= GETPOST('periodmonth','int');

$srch_datepay_start = dol_mktime(0, 0, 0, GETPOST('srch_datepay_startmonth', 'int'), GETPOST('srch_datepay_startday', 'int'), GETPOST('srch_datepay_startyear', 'int'));
$srch_datepay_end 	= dol_mktime(23, 59, 59, GETPOST('srch_datepay_endmonth', 'int'), GETPOST('srch_datepay_endday', 'int'), GETPOST('srch_datepay_endyear', 'int'));


############################################################################################################################################

if ($periodmonth == ''){
	if(((int) date('m') == 1)) {
		if(!$periodyear) $periodyear = (int) date('Y') - 1;
		$periodmonth = 12;
	} else {
		$periodmonth = (int) date('m') - 1;
	}
}

if (!$periodyear){
	$periodyear = date('Y');
}



############################################################################################################################################

if (GETPOST('button_removefilter_x', 'alpha') || GETPOST('button_removefilter.x', 'alpha') || GETPOST('button_removefilter', 'alpha')) {
	$toselect = '';
	$srch_datepay_start = '';
	$srch_datepay_end = '';
	$filter = "";
	$search_ref = "";
	$search_label = "";
	$srch_salairebrut = "";
	$srch_salairenet = "";
	$srch_netapayer = "";
	$search_fk_user = "";
	$periodyear = date('Y');
	// $periodmonth = date('m') + 0;
	$periodmonth = "";
	$massaction = '';
}


############################################################################################################################################
$txt_sql = $paies->getRules('', true);
if(!$txt_sql['sql']) {
	echo $db->lasterror();
	accessforbidden('Error: No rules found');
}

$afterretenus = $paies->afterretenus;
############################################################################################################################################

$arrayfields = array();

$arrayfields['o.ref']				= array('label'=> 'Ref', 'checked'=>1);
$arrayfields['firstday']			= array('label'=> 'From', 'checked'=>1);
$arrayfields['lastday']				= array('label'=> 'To', 'checked'=>1);
$arrayfields['o.matricule']			= array('label'=> 'paiematricule', 'checked'=>1);
$arrayfields['o.fk_user']			= array('label'=> 'paiedolibarremploye', 'checked'=>1);
$arrayfields['u.dateemployment'] 	= array('label'=> 'DateOfEmployment', 'checked'=>1);
$arrayfields['u.job']				= array('label'=> 'JobPosition', 'checked'=>1);
$arrayfields['o.nbrenfants']		= array('label'=> 'NE', 'checked'=>1);
$arrayfields['nd']					= array('label'=> 'ND', 'checked'=>1);
$arrayfields['eu.paiedolibarrcin'] 	= array('label'=> 'paiecin', 'checked'=>1);
$arrayfields['eu.paiedolibarrcnss']	= array('label'=> 'paiecnss', 'checked'=>1);

$tmp_firstrowtds = '';
$tmp_titlerowtds = '';

$brut_showed = false;
$impo_showed = false;


foreach ($txt_sql['rows'] as $key => $rule) {
	$arrayfields[$rule->code]	= array('label'=> $rule->label, 'checked'=>1);

	$tmp_firstrowtds .= '<td></td>';
	$tmp_titlerowtds .= '<th class="wrapcolumntitle left liste_titre" title="'.$rule->label.'">'.$rule->label.'</th>';

	if(!$brut_showed && $rule->category == '2RETENUES') {
		$arrayfields['o.salairebrut'] = array('label'=> 'paieSalaireBrut', 'checked'=> 1);
		$tmp_firstrowtds .= '<td></td>';
		$tmp_titlerowtds .= '<th class="wrapcolumntitle left liste_titre" title="'.$langs->trans('paieSalaireBrut').'">'.$langs->trans('paieSalaireBrut').'</th>';
		$brut_showed = true;
	}
	elseif(!$impo_showed && isset($afterretenus[$rule->category])) {
		$arrayfields['o.salairenet'] = array('label'=> 'paieNet_imposable', 'checked'=> 1);
		$tmp_firstrowtds .= '<td></td>';
		$tmp_titlerowtds .= '<th class="wrapcolumntitle left liste_titre" title="'.$langs->trans('paieNet_imposable').'">'.$langs->trans('paieNet_imposable').'</th>';
		$impo_showed = true;
	}

}

$arrayfields['o.datepay']			= array('label'=> 'paiesdatepay', 'checked'=> 0);
$arrayfields['o.description']		= array('label'=> 'Description', 'checked'=>0);
$arrayfields['o.netapayer']			= array('label'=> 'paieNet_a_payer', 'checked'=> 1);

// $arrayfields['o.label']				= array('label'=> 'paiesname', 'checked'=>0);
// $arrayfields['o.period']			= array('label'=> 'paieofmonth', 'checked'=> 1);

############################################################################################################################################
// -----------------------------------------------------------------------------------------------------------------------------------------
############################################################################################################################################


// $sql = "SELECT o.* ";
$sql = "SELECT o.rowid, o.ref, o.fk_user, o.label, o.comment, o.fk_salary, o.period, o.datepay, o.salairebrut, o.salairenet, o.netapayer, o.situation_f, o.nbrenfants, o.matricule ";

// llx_user
$sql .= ', u.dateemployment, u.job, u.login, u.lastname, u.firstname, u.email as user_email, u.statut as user_status, u.entity as user_entity, u.photo, u.office_phone, u.office_fax, u.user_mobile, u.job, u.gender';

// $sql .= ', GROUP_CONCAT(COALESCE(u.firstname, ""), " ", COALESCE(u.lastname, "")) as full_name';

// llx_user_extrafields
$sql .= ', eu.paiedolibarrcnss, eu.paiedolibarrcimr, eu.paiedolibarrcin';

// llx_paiedolibarr_paiesrules
$sql .= $txt_sql['sql']; // USING PIVOT TABLE
//      , MAX(CASE WHEN code = 'SALARY' THEN total END) SALARY
//      , MAX(CASE WHEN code = 'AMO' THEN total END) AMO
//      , MAX(CASE WHEN code = 'CNSS' THEN total END) CNSS

$sql .= ' FROM '.MAIN_DB_PREFIX.'paiedolibarr_paiesrules as pr ';
$sql .= " LEFT JOIN ".MAIN_DB_PREFIX."paiedolibarr_paies as o ON (pr.fk_paie = o.rowid)";
$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'user as u ON (o.fk_user = u.rowid)';
$sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'user_extrafields as eu ON (eu.fk_object = u.rowid)';
// $sql .= ' LEFT JOIN '.MAIN_DB_PREFIX.'paiedolibarr_rules as r ON (r.code = pr.code)';
$sql .= " WHERE o.entity IN (0,".(int) $conf->entity.")";

if ($search_ref) 			$sql .= natural_search("o.ref", $search_ref);
if ($search_label) 			$sql .= natural_search("o.label", $search_label);
// if ($search_description) 	$sql .= natural_search("o.description", $search_description);
if ($search_fk_user > 0)	$sql .= ' AND o.fk_user = '.(int) $search_fk_user;
if ($srch_salairebrut > 0) 	$sql .= " AND o.salairebrut like '%".$srch_salairebrut."%'";
if ($srch_salairenet > 0) 	$sql .= " AND o.salairebrut like '%".$srch_salairenet."%'";
if ($srch_netapayer > 0) 	$sql .= " AND o.salairebrut like '%".$srch_netapayer."%'";

if ($srch_datepay_start) 	$sql .= " AND CAST(o.datepay as date) >= '".$db->idate($srch_datepay_start)."'";
if ($srch_datepay_end) 		$sql .= " AND CAST(o.datepay as date) <= '".$db->idate($srch_datepay_end)."'";

$srchperiod = $periodyear.'-'.sprintf("%02d", $periodmonth).'-01';

if($periodmonth)
	$sql .= " AND o.period = '".$srchperiod."'";
else
	$sql .= " AND YEAR(o.period) = '".$periodyear."'";

$sql .= ' GROUP BY o.rowid';
$sql .= ', o.ref, o.fk_user, o.label, o.comment, o.fk_salary, o.period, o.datepay, o.salairebrut, o.salairenet, o.netapayer, o.situation_f, o.nbrenfants, o.matricule ';
$sql .= ', u.dateemployment, u.job, u.login, u.lastname, u.firstname, u.email, u.statut, u.entity, u.photo, u.office_phone, u.office_fax, u.user_mobile, u.job, u.gender';
$sql .= ', eu.paiedolibarrcnss, eu.paiedolibarrcimr, eu.paiedolibarrcin';

$sql .= $db->order($sortfield, $sortorder);


// echo $sql;

############################################################################################################################################

// Count total nb of records
$nbtotalofrecords = '';
if (empty($conf->global->MAIN_DISABLE_FULL_SCANLIST) || 1>0) {
	$resql = $db->query($sql);
	$nbtotalofrecords = $db->num_rows($resql);
	if (($page * $limit) > $nbtotalofrecords) {	// if total resultset is smaller then paging size (filtering), goto and load page 0
		$page = 0;
		$offset = 0;
	}
}



############################################################################################################################################

if(!empty($periodmonth)){
	$period = dol_htmlentitiesbr_decode($langs->trans("Month".sprintf("%02d", $periodmonth)))." ".$periodyear;
}else{
	$period = $periodyear;
}

$exporter = GETPOST('exporter');
if($exporter){
	$filename = $langs->trans('PayrollJournal').' '.$period.".xls";
	if($exporter == 'pdf') {
		$filename=$langs->trans('PayrollJournal').' '.$period.".pdf";

	    require_once DOL_DOCUMENT_ROOT.'/core/lib/pdf.lib.php';
	    require_once dol_buildpath('/paiedolibarr/pdf/pdf.lib.php');

	    $pdf->SetMargins(7, 2, 7, false);
	    $pdf->SetFooterMargin(10);
	    $pdf->setPrintFooter(true);
	    $pdf->SetAutoPageBreak(TRUE,10);

	    $pdf->SetFont('dejavusans', '', 9, '', true);
        $pdf->AddPage('L');
        // $pdf->AddPage('P');

        $formatarray = pdf_getFormat();

        $marge_haute =isset($conf->global->MAIN_PDF_MARGIN_TOP)?$conf->global->MAIN_PDF_MARGIN_TOP:10;
        $marge_basse =isset($conf->global->MAIN_PDF_MARGIN_BOTTOM)?$conf->global->MAIN_PDF_MARGIN_BOTTOM:10;
        $margin = $marge_haute+$marge_basse+45;

        $page_largeur = $formatarray['width'];
        $page_hauteur = $formatarray['height'];
        $format = array($page_largeur,$page_hauteur);

        $marge_gauche=isset($conf->global->MAIN_PDF_MARGIN_LEFT)?$conf->global->MAIN_PDF_MARGIN_LEFT:8;
        $marge_droite=isset($conf->global->MAIN_PDF_MARGIN_RIGHT)?$conf->global->MAIN_PDF_MARGIN_RIGHT:8;
        $marge_haute =isset($conf->global->MAIN_PDF_MARGIN_TOP)?$conf->global->MAIN_PDF_MARGIN_TOP:7;
        $marge_basse =isset($conf->global->MAIN_PDF_MARGIN_BOTTOM)?$conf->global->MAIN_PDF_MARGIN_BOTTOM:5;
        $emetteur = $mysoc;

        $default_font_size = pdf_getPDFFontSize($langs);

        $pdf->SetTextColor(0,0,0);
        $pdf->SetFont('dejavusans','', $default_font_size + 2);

        $posx=$marge_gauche;
        $posy=$marge_haute;

        $height = 15;
        // Logo
        $logo=$conf->mycompany->dir_output.'/logos/'.$emetteur->logo;

        if ($emetteur->logo)
        {
            if (is_readable($logo))
            {
                // $height=pdf_getHeightForLogo($logo);
                $pdf->Image($logo, $marge_gauche, $posy, 0, $height); // width=0 (auto)
            }
            else
            {
                $pdf->SetTextColor(200,0,0);
                $pdf->SetFont('dejavusans','B', $default_font_size -2);
                $pdf->MultiCell(100, 3, $langs->transnoentities("ErrorLogoFileNotFound",$logo), 0, 'L');
                $pdf->MultiCell(100, 3, $langs->transnoentities("ErrorGoToGlobalSetup"), 0, 'L');
            }
        }
        else
        {
            $text=$emetteur->name;
            $pdf->MultiCell(40, 2, $langs->convToOutputCharset($text), 0, 'L');
        }

        $posy += $height+5;

        $pdf->SetXY($posx,$posy);

	}

    require_once dol_buildpath('/paiedolibarr/tpl/journal_de_paie.tpl.php');


	if($exporter == 'pdf') {
		$pdf->writeHTML($output, true, false, true, false, '');
	    ob_start();
	    $pdf->Output($filename, 'I');
	    // ob_end_clean();
	    die();
	}
}

############################################################################################################################################

/*
 * Actions
 */
if (GETPOST('cancel', 'alpha')) {
	$action = 'list'; $massaction = '';
}

// Delete object en masse
if ($massaction == 'predeleteobject' && $usercandelete) {
	$error = 0;
	$ttr = 0;
	$ids = '';
	$nbchanged = 0;
	$db->begin();

	foreach ($toselect as $objid) {
		$ids = ($ids != '') ? $ids.','.$objid : $objid;
		$nbchanged++;

		// if($ttr >= 200) {
	    //     $result = $db->query("DELETE FROM ".MAIN_DB_PREFIX.$paies->table_element." WHERE rowid IN (".$ids.") ");
	    //     $ids = '';
	    //     $ttr = 0;
		// }
		$ttr++;
	}

	if($ids != '') {
		$result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paies WHERE rowid IN (".$ids.") ");
		if($result > 0) 
        	$result = $db->query("DELETE FROM ".MAIN_DB_PREFIX."paiedolibarr_paiesrules WHERE fk_paie IN (".$ids.") ");
	}

	if (!$error) {
		setEventMessages($langs->trans("RecordsDeleted", $nbchanged), null, 'mesgs');
		$db->commit();
	} else {
		$db->rollback();
	}
}

// Selection of new fields
include DOL_DOCUMENT_ROOT.'/core/actions_changeselectedfields.inc.php';






############################################################################################################################################

$arrayofjs = array('includes/jquery/plugins/blockUI/jquery.blockUI.js', 'core/js/blockUI.js');
$moreheadjs = '';
$moreheadjs .= '<script type="text/javascript">'."\n";
$moreheadjs .= 'var indicatorBlockUI = \''.DOL_URL_ROOT."/theme/".$conf->theme."/img/working.gif".'\';'."\n";

$moreheadjs .= '$( document ).ready(function() {
	$("#action_generateabsences").click( function() {
		$.pleaseBePatient("'.$langs->trans('PleaseBePatient').'");
	});
});';
$moreheadjs .= '</script>'."\n";

$title = '';

$title .= dol_htmlentitiesbr_decode($modname);

if($periodmonth) {
	$title .= ' - '.$langs->trans("Month".sprintf("%02d", $periodmonth))." ".$periodyear;
}
else {
	$title .= ' - '.$periodyear;
}

// require_once dol_buildpath('/paiedolibarr/export/etat.php');

$sql .= $db->plimit($limit + 1, $offset);


/*
 * View
 */
llxHeader($moreheadjs, $title, $help_url = '', $target = '', $disablejs = 0, $disablehead = 0, $arrayofjs);

?>
<style type="text/css">
div#id-right {
    max-width: 100px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
</style>
<?php

$currency = $conf->currency;


$param = '';
if ($limit > 0 && $limit != $conf->liste_limit) $param .= '&limit='.urlencode($limit);
if ($search_ref) $param .= '&search_ref='.urlencode($search_ref);
if ($search_label) $param .= '&search_label='.urlencode($search_label);
if ($search_fk_user) $param .= '&search_fk_user='.urlencode($search_fk_user);
if ($srch_salairebrut) $param .= '&srch_salairebrut='.urlencode($srch_salairebrut);
if ($srch_salairenet) $param .= '&srch_salairenet='.urlencode($srch_salairenet);
if ($srch_netapayer) $param .= '&srch_netapayer='.urlencode($srch_netapayer);
if ($periodyear) $param .= '&periodyear='.urlencode($periodyear);
if ($periodmonth) $param .= '&periodmonth='.urlencode($periodmonth);
if ($srch_datepay_start != '') $param .= '&srch_datepay_start='.urlencode($srch_datepay_start);
if ($srch_datepay_end != '') $param .= '&srch_datepay_end='.urlencode($srch_datepay_end);

$resql = $db->query($sql);
if ($resql) {
	$num = $db->num_rows($resql);

	$arrayofselected = is_array($toselect) ? $toselect : array();

	
	// List of mass actions available
	$arrayofmassactions = array();

	// if (!empty($usercandelete)) 
	// 	$arrayofmassactions['predeleteobject'] 	= img_picto('', 'delete', 'class="pictofixedwidth"').' '.$langs->trans("Delete");

	// if (!empty($usercanaction_all)) {
	// 	$arrayofmassactions['preacceptobj'] 	= img_picto('', 'check', 'class="pictofixedwidth"').' '.$langs->trans("STATUS_GRANTED");
	// 	$arrayofmassactions['prerefuseobj'] 	= img_picto('', 'close_title', 'class="pictofixedwidth"').' '.$langs->trans("STATUS_NOT_GRANTED");
	// 	$arrayofmassactions['prereduceobj'] 	= img_picto('', 'angle-double-down', 'class="pictofixedwidth"').' '.$langs->trans("HRMdeduitSalaire").' : '.$langs->trans("Yes");
	// 	$arrayofmassactions['prenotreduceobj'] 	= img_picto('', 'check', 'class="pictofixedwidth"').' '.$langs->trans("HRMdeduitSalaire").' : '.$langs->trans("No");
	// }
	
	$massactionbutton = $form->selectMassAction('', $arrayofmassactions);

	// Lines of title fields
	print '<form class="paiedolibarr" action="'.$_SERVER["PHP_SELF"].'" method="POST">'."\n";
	if ($optioncss != '') {
		print '<input type="hidden" name="optioncss" value="'.$optioncss.'">';
	}
	print '<input type="hidden" name="token" value="'.newToken().'">';
	print '<input type="hidden" name="formfilteraction" id="formfilteraction" value="list">';
	print '<input type="hidden" name="action" value="'.($action == 'edit' ? 'update' : 'list').'">';
	print '<input type="hidden" name="contextpage" value="'.$contextpage.'">';
	print '<input type="hidden" name="sortfield" value="'.$sortfield.'">';
	print '<input type="hidden" name="sortorder" value="'.$sortorder.'">';
	// print '<input type="hidden" name="module" value="'.$module.'">';
	// print '<input type="hidden" name="id" value="'.$id.'">';
	

	$pa = ($periodmonth > 0) ? '&month='.$periodmonth : '';
	$pa .= ($periodyear > 0) ? '&year='.$periodyear : '';

	$newcardbutton = '';

	$newcardbutton .= '<span class="paiesearchbutton">';
	// $newcardbutton .= '<a href="./etat.php?exporter=pdf&periodyear='.$periodyear.'&periodmonth='.$periodmonth.'" target="_blank" class="butAction">'.$langs->trans('PDF').'</a>';
	$newcardbutton .= '<a href="./etat.php?exporter=xls&periodyear='.$periodyear.'&periodmonth='.$periodmonth.'" class="butAction">'.$langs->trans('Excel').'</a>';
	// $searchpicto = $form->showFilterButtons();
	// $newcardbutton .= $searchpicto;
	$newcardbutton .= '</span>';

	if($module)
		$newcardbutton .= dolGetButtonTitle($langs->trans('New'), '', 'fa fa-plus-circle', './card.php?action=create'.$pa, '', $usercancreate);
		// $newcardbutton .= dolGetButtonTitle($langs->trans('New'), '', 'fa fa-plus-circle', './card.php?'.$firstparam.'&action=create'.$pa, '', $usercancreate);



	print_barre_liste($title, $page, $_SERVER["PHP_SELF"], $param, $sortfield, $sortorder, $massactionbutton, $num, $nbtotalofrecords, $paies->picto, 0, $newcardbutton, '', $limit, 0, 0, 1);

	$varpage = empty($contextpage) ? $_SERVER["PHP_SELF"] : $contextpage;
	$selectedfields = $form->multiSelectArrayWithCheckbox('selectedfields', $arrayfields, $varpage); // This also change content of $arrayfields
	$selectedfields .= (count($arrayofmassactions) ? $form->showCheckAddButtons('checkforselect', 1) : '');


	print '<div id="paiedolibarrpage">';
	print '<input type="hidden" name="token" value="'.newToken().'">';
	print '<input type="hidden" name="action" value="selectperiod">';
	// print '<input type="hidden" name="id" value="'.$proejectid.'">';
	// print '<input name="filter" type="hidden" value="'.$filter.'">';

	print '<table width="100%">';

	print '<tr>';
	print '<td class="left">';
	print $formother->selectyear($periodyear,'periodyear',0, 20, 1, 0, 0, 'onchange="this.form.submit()"');
	print $formother->select_month($periodmonth,'periodmonth',1,1,'maxwidth100imp');
	print '</td>';

	print "</table>";
	print '</div>';
	print '<br>';

	print '<div class="clear"></div>';

	$moreforfilter = '';
	print '<div class="div-table-responsive">';
	print '<table class="paiedolibarr_paiedolibarrlist  tagtable liste'.($moreforfilter ? " listwithfilterbefore" : "").'">'."\n";


	// Filters
	print '<tr class="liste_titre_filter">';

	// Ref
	if (!empty($arrayfields['o.ref']['checked'])) {
		print '<td class="liste_titre left width100">';
		print '<input class="flat maxwidth100" type="text" name="search_ref" value="'.dol_escape_htmltag($search_ref).'"></td>';
	}

	// First day
	if (!empty($arrayfields['firstday']['checked'])) {
		print '<td></td>';
	}

	// Last day
    if (!empty($arrayfields['lastday']['checked'])) {
		print '<td></td>';
	}

	// Matricule
    if (!empty($arrayfields['o.matricule']['checked'])) {
		print '<td></td>';
	}

	// User
    if (!empty($arrayfields['o.fk_user']['checked'])) {
        print '<td class="liste_titre left width150" align="left">';
        // print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, (!$user->admin) ? [$user->id] : '');
        // print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, '');
        print $form->select_dolusers($search_fk_user, 'search_fk_user', 1, null, 0, '', $enableonly = '', $force_entity = '0', $maxlength = 0, $showstatus = 0, $morefilter = '', $show_every = 0, $enableonlytext = '', $morecss = 'width150');
        print '</td>';
    }
	
	// DateOfEmployment
	if (!empty($arrayfields['u.dateemployment']['checked'])) {
		print '<td></td>';
	}

	// Fonction
	if (!empty($arrayfields['u.job']['checked'])) {
		print '<td></td>';
	}

	// NE
	$nd = 0;
	if (!empty($arrayfields['o.nbrenfants']['checked'])) {
		print '<td></td>';
	}

	// ND
	if (!empty($arrayfields['nd']['checked'])) {
		print '<td></td>';
	}

	// CIN
	if (!empty($arrayfields['eu.paiedolibarrcin']['checked'])) {
		print '<td></td>';
	}

	// CNSS
	if (!empty($arrayfields['eu.paiedolibarrcnss']['checked'])) {
		print '<td></td>';
	}

	// // Label
	// if (!empty($arrayfields['o.label']['checked'])) {
	// 	print '<td class="liste_titre left width200">';
	// 	print '<input class="flat maxwidth100" type="text" name="search_label" value="'.dol_escape_htmltag($search_label).'"></td>';
	// }



	print $tmp_firstrowtds;




	
	// // Date Payment
	// if (!empty($arrayfields['o.datepay']['checked'])) {
	// 	print '<td class="liste_titre center width50">';
	// 	print '<div class="nowrap">';
	// 		print $form->selectDate($srch_datepay_start, 'srch_datepay_start', 0, 0, 1, "search_form", 1, 0, 0, '', '', '', '', 1, '', $langs->trans('From'));
	// 	print '</div>';
		
	// 	print '<div class="nowrap">';
	// 		print $form->selectDate($srch_datepay_end, 'srch_datepay_end', 0, 0, 1, "search_form", 1, 0, 0, '', '', '', '', 1, '', $langs->trans('to'));
	// 	print '</div>';
	// 	print '</td>';
	// }

	// // Description
	// if (!empty($arrayfields['o.description']['checked'])) {
	// 	print '<td class="liste_titre left">';
	// 	print '<input class="flat maxwidth100" type="text" name="search_description" value="'.dol_escape_htmltag($search_description).'"></td>';
	// }
	
	// // Brut
	// if (!empty($arrayfields['o.salairebrut']['checked'])) {
	// 	print '<td class="liste_titre right width100">';
	// 	print '<input class="width100" step="0.01" type="number" class="" id="srch_salairebrut" name="srch_salairebrut" value="'.$srch_salairebrut.'"/>';
	// 	print '</td>';
	// }
	
	// // Net Impo
	// if (!empty($arrayfields['o.salairenet']['checked'])) {
	// 	print '<td class="liste_titre right width100">';
	// 	print '<input class="width100" step="0.01" type="number" class="" id="srch_salairenet" name="srch_salairenet" value="'.$srch_salairenet.'"/>';
	// 	print '</td>';
	// }
	
	// Net à payer
	if (!empty($arrayfields['o.netapayer']['checked'])) {
		print '<td class="liste_titre right width100">';
		print '<input class="width100" step="0.01" type="number" class="" id="srch_netapayer" name="srch_netapayer" value="'.$srch_netapayer.'"/>';
		print '</td>';
	}

	// Action column
	print '<td class="liste_titre maxwidthsearch center">';
		$searchpicto = $form->showFilterButtons();
		print $searchpicto;
	print '</td>';

	print "</tr>\n";


	$totalarray = array();
	$totalarray['nbfield'] = 0;
	$totalduration = 0;

	print '<tr class="liste_titre">';

	if (!empty($arrayfields['o.ref']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.ref']['label'], $_SERVER["PHP_SELF"], "o.ref", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// First day
	if (!empty($arrayfields['firstday']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['firstday']['label'], $_SERVER["PHP_SELF"], "", "", $param, '', $sortfield, $sortorder, 'center ');
	}

	// Last day
    if (!empty($arrayfields['lastday']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['lastday']['label'], $_SERVER["PHP_SELF"], "", "", $param, '', $sortfield, $sortorder, 'center ');
	}

	// Matricule
    if (!empty($arrayfields['o.matricule']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.matricule']['label'], $_SERVER["PHP_SELF"], "o.matricule", "", $param, '', $sortfield, $sortorder, 'right ');
	}

	// User
	if (!empty($arrayfields['o.fk_user']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.fk_user']['label'], $_SERVER["PHP_SELF"], "o.fk_user", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// DateOfEmployment
	if (!empty($arrayfields['u.dateemployment']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['u.dateemployment']['label'], $_SERVER["PHP_SELF"], "u.dateemployment", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// Fonction
	if (!empty($arrayfields['u.job']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['u.job']['label'], $_SERVER["PHP_SELF"], "u.job", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// NE
	$nd = 0;
	if (!empty($arrayfields['o.nbrenfants']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['o.nbrenfants']['label'], $_SERVER["PHP_SELF"], "o.nbrenfants", "", $param, '', $sortfield, $sortorder, 'right ');
	}

	// ND
	if (!empty($arrayfields['nd']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['nd']['label'], $_SERVER["PHP_SELF"], "", "", $param, '', $sortfield, $sortorder, 'right ');
	}

	// CIN
	if (!empty($arrayfields['eu.paiedolibarrcin']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['eu.paiedolibarrcin']['label'], $_SERVER["PHP_SELF"], "eu.paiedolibarrcin", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// CNSS
	if (!empty($arrayfields['eu.paiedolibarrcnss']['checked'])) {
		$totalarray['nbfield']++;
		print_liste_field_titre($arrayfields['eu.paiedolibarrcnss']['label'], $_SERVER["PHP_SELF"], "eu.paiedolibarrcnss", "", $param, '', $sortfield, $sortorder, 'left ');
	}

	// if (!empty($arrayfields['o.label']['checked'])) {
	// 	$totalarray['nbfield']++;
	// 	print_liste_field_titre($arrayfields['o.label']['label'], $_SERVER["PHP_SELF"], "o.label", "", $param, '', $sortfield, $sortorder, 'left width150 minwidth150 ');
	// }



	$totalarray['val']['salairebrut'] = 0;  
	$totalarray['val']['salairenet'] = 0;
	$totalarray['val']['netapayer']	= 0;

	$brut_showed = false;
	$impo_showed = false;

	foreach ($txt_sql['rows'] as $key => $rule) {

		$totalarray['nbfield']++;
		$totalarray['pos'][$totalarray['nbfield']] = $rule->code;
		// $totalarray['val']['netapayer']	= $rule->code;
		print_liste_field_titre($rule->label, $_SERVER["PHP_SELF"], $rule->code, "", $param, '', $sortfield, $sortorder, 'left ');
		// print '<th class="wrapcolumntitle left liste_titre" title="'.$rule->label.'">'.$rule->label.'</th>';

		if(!$brut_showed && $rule->category == '2RETENUES') {
			$totalarray['nbfield']++;
			$totalarray['pos'][$totalarray['nbfield']] = 'salairebrut';
			// $totalarray['val']['netapayer']	= $rule->code;
			// print '<th class="wrapcolumntitle left liste_titre" title="'.$langs->trans('paieSalaireBrut').'">'.$langs->trans('paieSalaireBrut').'</th>';
			print_liste_field_titre($arrayfields['o.salairebrut']['label'], $_SERVER["PHP_SELF"], "o.salairebrut", "", $param, '', $sortfield, $sortorder, 'left boldth ');
			$brut_showed = true;
		}
		elseif(!$impo_showed && isset($afterretenus[$rule->category])) {
			$totalarray['nbfield']++;
			$totalarray['pos'][$totalarray['nbfield']] = 'salairenet';
			// $totalarray['val']['netapayer']	= 'netapayer';
			// print '<th class="wrapcolumntitle left liste_titre" title="'.$langs->trans('paieNet_imposable').'">'.$langs->trans('paieNet_imposable').'</th>';
			print_liste_field_titre($arrayfields['o.salairenet']['label'], $_SERVER["PHP_SELF"], "o.salairenet", "", $param, '', $sortfield, $sortorder, 'left boldth ');
			$impo_showed = true;
		}

	}


	// print $tmp_titlerowtds;

	// if (!empty($arrayfields['o.datepay']['checked'])) {
	// 	$totalarray['nbfield']++;
	// 	print_liste_field_titre($arrayfields['o.datepay']['label'], $_SERVER["PHP_SELF"], "o.datepay", "", $param, '', $sortfield, $sortorder, ' width50 maxwidth150 center ');
	// }

	// if (!empty($arrayfields['o.description']['checked'])) {
	// 	$totalarray['nbfield']++;
	// 	print_liste_field_titre($arrayfields['o.description']['label'], $_SERVER["PHP_SELF"], "o.description", "", $param, '', $sortfield, $sortorder, 'left ');
	// }

	// if (!empty($arrayfields['o.salairebrut']['checked'])) {
	// 	print_liste_field_titre($arrayfields['o.salairebrut']['label'], $_SERVER["PHP_SELF"], "o.salairebrut", "", $param, '', $sortfield, $sortorder, ' right ');
	// 	$totalarray['nbfield']++;
	// 	$totalarray['pos'][$totalarray['nbfield']] = 'salairebrut';
	// }
	// if (!empty($arrayfields['o.salairenet']['checked'])) {
	// 	print_liste_field_titre($arrayfields['o.salairenet']['label'], $_SERVER["PHP_SELF"], "o.salairenet", "", $param, '', $sortfield, $sortorder, ' right ');
	// 	$totalarray['nbfield']++;
	// 	$totalarray['pos'][$totalarray['nbfield']] = 'salairenet';
	// }
	if (!empty($arrayfields['o.netapayer']['checked'])) {
		print_liste_field_titre($arrayfields['o.netapayer']['label'], $_SERVER["PHP_SELF"], "o.netapayer", "", $param, '', $sortfield, $sortorder, ' right boldth ');
		$totalarray['nbfield']++;
		$totalarray['pos'][$totalarray['nbfield']] = 'netapayer';
	}
	// Action
	print_liste_field_titre('', $_SERVER["PHP_SELF"], "", '', '', '', $sortfield, $sortorder, 'maxwidthsearch center ');
	// print_liste_field_titre($selectedfields, $_SERVER["PHP_SELF"], "", '', '', '', $sortfield, $sortorder, 'maxwidthsearch center ');
	$totalarray['nbfield']++;

	print "</tr>\n";

	$i = 0;
	

	while ($i < min($num, $limit)) {
		$obj = $db->fetch_object($resql);

		$error = 0;
		// if(!$obj->module || !isset($paiedolibarr->class_modules[$obj->module])) $error++;

		// $res = 0;
		// if(isset($paiedolibarr->class_modules[$obj->module])) {
		// 	$objectmod = new $paiedolibarr->class_modules[$obj->module]($db);
		// 	$res = $objectmod->fetch($obj->fk_module);
		// }

		$paiedolibarr->id 	= $obj->rowid;
		$paiedolibarr->ref 	= $obj->ref;

		$morecss = (!$module && isset($r_arr[$obj->rowid])) ? $r_arr[$obj->rowid] : '';

		$firstday = date('01/m/Y', strtotime($obj->period));
		$lastday = date('t/m/Y', strtotime($obj->period));

		print '<tr class="oddeven '.$morecss.'">';

		// Réf.
		if (!empty($arrayfields['o.ref']['checked'])) {
			print '<td class="nowrap">';
				print '<a href="./card.php?id='.$obj->rowid.'">';
				print img_picto($langs->trans("Show"), $paies->picto, 'class="valignmiddle paddingrightonly"');
				print $obj->ref;
				if($morecss) {
					print '<span class="fa fa-flag valignmiddle marginleftonly flag '.$morecss.'"></span>';
				}
				print '</a>';
				print '<a class="marginleftonly" href="./card.php?id='.$obj->rowid.'&export=pdf" target="_blank" >'.img_mime('test.pdf',$langs->trans('paiePrintFile')).'</a>';
			print '</td>';
		}

		// First day
        if (!empty($arrayfields['firstday']['checked'])) {
			print '<td class="nowrap center">';
			// print dol_print_date($db->jdate($obj->datepay), 'day');
			print $firstday;
			print '</td>';
		}

		// Last day
        if (!empty($arrayfields['lastday']['checked'])) {
			print '<td class="nowrap center">'.$lastday.'</td>';
		}

		// Matricule
        if (!empty($arrayfields['o.matricule']['checked'])) {
			print '<td class="nowrap right">'.$obj->matricule.'</td>';
		}

		// print '<td class="nowrap left">'.$obj->lastname.'</td>';
		// print '<td class="nowrap left">'.$obj->firstname.'</td>';

		// User
        if (!empty($arrayfields['o.fk_user']['checked'])) {
            $userstatic->id             = $obj->fk_user;
            $userstatic->login          = $obj->login;
            $userstatic->lastname       = $obj->lastname;
            $userstatic->firstname      = $obj->firstname;
            $userstatic->email          = $obj->user_email;
            $userstatic->status         = $obj->user_status;
            $userstatic->entity         = $obj->user_entity;
            $userstatic->photo          = $obj->photo;
            $userstatic->office_phone   = $obj->office_phone;
            $userstatic->office_fax     = $obj->office_fax;
            $userstatic->user_mobile    = $obj->user_mobile;
            $userstatic->job            = $obj->job;
            $userstatic->gender         = $obj->gender;
            
            print '<td class="left tdoverflowmax200">';
            if ($userstatic->id) {
            	$cls = ($userstatic->id == $user->id) ? 'current_connected_user' : '';
            	$n = '<span class="userconnected '.$cls.'">';
				$n .= $userstatic->getNomUrl(1);
				$n .= '</span>';

				echo $n;
            }
            print "</td>\n";
        }

		// DateOfEmployment
		if (!empty($arrayfields['u.dateemployment']['checked'])) {
			print '<td class="center">';
				// print dol_print_date($db->jdate($obj->datepay), 'day');
			if($obj->dateemployment)
				print dol_print_date($obj->dateemployment, 'day');
			else {
				// $linku = dol_buildpath('/user/card.php?id='.$obj->fk_user.'&action=edit#dateemployment', 1);
				// echo '<span class="embauche_not_exist error">'.$langs->trans('NotDefined').'</span>';
				// echo '<a class="marginleftonly editfielda" target="_blank" href="'.$linku.'">';
				// echo img_picto('Edit', 'edit', '');
				// echo '</a>';
			}
			print '</td>';
		}

		// Fonction
		if (!empty($arrayfields['u.job']['checked'])) {
			print '<td class="left nowrap">';
				print $obj->job;
			print '</td>';
		}

		// NE
		$nd = 0;
		if (!empty($arrayfields['o.nbrenfants']['checked'])) {
			print '<td class="nowrap right">';
			if($obj->nbrenfants) print $obj->nbrenfants;
			print '</td>';
		}

		// ND
		if (!empty($arrayfields['nd']['checked'])) {
			print '<td class="nowrap right">';
			$nd += (int) $obj->nbrenfants;
			if($obj->situation_f == 'M') $nd++;
			if($nd) print $nd;
			print '</td>';
		}

		// CIN
		if (!empty($arrayfields['eu.paiedolibarrcin']['checked'])) {
			print '<td class="nowrap left">';
			print $obj->paiedolibarrcin;
			print '</td>';
		}

		// CNSS
		if (!empty($arrayfields['eu.paiedolibarrcnss']['checked'])) {
			print '<td class="nowrap left">';
			print $obj->paiedolibarrcnss;
			print '</td>';
		}

		$brut_showed = false;
		$impo_showed = false;
		foreach ($txt_sql['rows'] as $key => $rule) {
			
			$coderule = $rule->code;

			if (!empty($arrayfields[$coderule]['checked'])) {
				$clscol = $obj->$coderule < 0 ? 'error' : '';
				print '<td class="nowrap right '.$clscol.'">';

					if(!isset($totalarray['val'][$coderule])) $totalarray['val'][$coderule] = 0;
					
					if(isset($obj->$coderule)) {
						print $paiedolibarr->number_format($obj->$coderule, 2, '.',' ');
			    		$totalarray['val'][$coderule] += $obj->$coderule;
					}
				print '</td>';
			}

			if(!$brut_showed && $rule->category == '2RETENUES') {
				// Brut
				if (!empty($arrayfields['o.salairebrut']['checked'])) {
					$clscol = $obj->salairebrut < 0 ? 'error' : '';
					print '<td class="nowrap right '.$clscol.'">';
						print $paiedolibarr->number_format($obj->salairebrut, 2, '.',' ');
			    		$totalarray['val']['salairebrut'] += $obj->salairebrut;
					print '</td>';
				}

				$brut_showed = true;
			}
			elseif(!$impo_showed && isset($afterretenus[$rule->category])) {
				// Net Impo
				if (!empty($arrayfields['o.salairenet']['checked'])) {
					$clscol = $obj->salairenet < 0 ? 'error' : '';
					print '<td class="nowrap right '.$clscol.'">';
						print $paiedolibarr->number_format($obj->salairenet, 2, '.',' ');
						$totalarray['val']['salairenet'] += $obj->salairenet;
					print '</td>';
				}

				$impo_showed = true;
			}

		}
		
		
		// Net à payer
		if (!empty($arrayfields['o.netapayer']['checked'])) {
			$clscol = $obj->netapayer < 0 ? 'error' : '';
			print '<td class="nowrap right '.$clscol.'">';
				print $paiedolibarr->number_format($obj->netapayer, 2, '.',' ');
				$totalarray['val']['netapayer']	+= $obj->netapayer;
			print '</td>';
		}

		// Action column
		print '<td class="nowrap center">';
		
			if($user->admin || $user->id == $obj->fk_user) {
				print '<a href="./card.php?id='.$obj->rowid.'&action=edit">';
				print img_picto($langs->trans("Edit"), 'edit', 'class="valignmiddle marginleftonly paddingrightonly"');
				print '</a>';
			}
			
			if ($massactionbutton || $massaction) {
				$selected = (in_array($obj->ref, $arrayofselected)) ? 1 : 0;
				print '<input id="cb'.$obj->ref.'" class="flat checkforselect" type="checkbox" name="toselect[]" value="'.$obj->rowid.'"'.($selected ? ' checked="checked"' : '').'>';
			}
		print '</td>';

		print '</tr>'."\n";

		$i++;
	}


	// // Add a line for total if there is a total to show
	// if (!empty($arrayfields['duration']['checked'])) {
	// 	print '<tr class="total">';
	// 	foreach ($arrayfields as $key => $val) {
	// 		if (!empty($val['checked'])) {
	// 			if ($key == 'duration') {
	// 				print '<td class="right">'.$totalduration.' '.$langs->trans('DurationDays').'</td>';
	// 			} else {
	// 				print '<td></td>';
	// 			}
	// 		}
	// 	}
	// 	print '</tr>';
	// }

	// d($totalarray['val'],0);

	// Si il n'y a pas d'enregistrement suite à une recherche
	if ($num == 0) {
		$colspan = 1;
		foreach ($arrayfields as $key => $val) {
			if (!empty($val['checked'])) {
				$colspan++;
			}
		}
		print '<tr><td colspan="'.$colspan.'" class="opacitymedium">'.$langs->trans("NoRecordFound").'</td></tr>';
	} else {

		print '<tr class="liste_total">';
		$i = 0;
		while ($i < $totalarray['nbfield']) {
			$i++;
			if (!empty($totalarray['pos'][$i])) {
				$clscol = ($totalarray['val'][$totalarray['pos'][$i]]) < 0 ? 'error' : '';
				$tmptotal = !empty($totalarray['val'][$totalarray['pos'][$i]])?$totalarray['val'][$totalarray['pos'][$i]]:0;
				print '<td class="right '.$clscol.'">'.$paiedolibarr->number_format($tmptotal, 2, '.',' ').'</td>';
			} else {
				if ($i == 1) {
					if (is_null($limit) || ($num < $limit && $page == 0)) {
						print '<td>'.$langs->trans("Total").'</td>';
					} else {
						print '<td>';
						if (is_object($form)) {
							print $form->textwithpicto($langs->trans("Total"), $langs->transnoentitiesnoconv("Totalforthispage"));
						} else {
							print $langs->trans("Totalforthispage");
						}
						print '</td>';
					}
				} else {
					print '<td></td>';
				}
			}
		}
		print '</tr>';

	}

	print '</table>';
	print '</div>';

	print '</form>';
} else {
	echo $db->lasterror();
}

?>
<script>
	$( function() {
	$('#paiedolibarrpage select#periodmonth').on('change', function(){
	    $(this).closest('form').submit();
	});
	} );
</script>
<?php

// End of page
llxFooter();
$db->close();